1. Selection Sort
bring min to the front and swaps with last number

for(int i=0;i<n-1;i++){
 int mini=i;
 for(int j=i;j<n-1;j++){
  if(arr[j] <arr[mini] mini=j;
 }
 swap(arr[i], arr[mini]);
} Time complexity: O(N2)

2. Bubble Sort
Pushes max to the last 
void bubble(int arr[], int n){
 bool swaphuakya=false;
    for(int i=n-1;i>0;i--){
        for(int j=0;j<i;j++){
          if(arr[j]>arr[j+1]){
              swap(arr[j],arr[j+1]);swaphuakya=true;
          }
        }
          if(swaphuakya==false){break;}
    }
} Time complexity: O(N2) [worst and average] O(N) Best case

3. Insertion Sort 
void insertion(int arr[],int n){
    for(int i=0;i<n-1;i++){
     for(int j=i+1;j>=1;j--){
      if(arr[j]<arr[j-1]) swap(arr[j],arr[j-1]);
     }  
   }  
}  Time complexity: Time complexity: O(N2) [worst and average] O(N) Best case

4. Merge Sort
